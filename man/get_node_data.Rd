% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/network.R
\name{get_node_data}
\alias{get_node_data}
\title{Export the node data from the cache}
\usage{
get_node_data()
}
\value{
A \code{\link[tibble:tibble]{tibble::tibble()}} with one row for each user
and many columns. The first column, \code{sampled_at}, records
when we recorded data for a particular user. The rest of
the columns are the output of \code{\link[rtweet:lookup_users]{rtweet::lookup_users()}},
while I will not document in detail here. This is a
mixture of information about the user profile, and
also their most recent tweet (at the time of sampling).

\strong{There is one key difference from \code{rtweet::lookup_users()}}
output, which is the \code{user_id} column is a \code{\link[bit64:integer64]{bit64::integer64()}}
vector rather than a character vector. This is to facilitate
easy joining with the edgelist produced by \code{\link[=get_edge_data]{get_edge_data()}}.
It is okay to convert this column to a character vector if
you would like, but \strong{do not} convert the \code{user_id} column
to a base integer or numeric vector with \code{as.integer} or
\code{as.numeric}: this will result in data loss.

Another particularly useful column is the \code{screen_name}
column, which contains the user handles that you use to
interact with other users on Twitter.
}
\description{
As your cache grows in size, this gets slow pretty
quickly. I recommend saving the results to an \code{.rds}
file for convenience. I also recommend subsetting
as much as possible to the part of the graph you
are interested in.
}
\details{
If you \code{request()}ed user A, and user A follows user B,
but you did not request user B, user A will appear in the node
data but user B will not. We call user A a \emph{core} user here,
and user B a \emph{peripheral}. \code{twittercache} does not allow
you to request information about protected users, but it is
still possible that some peripheral users will be protected
accounts.
}
\seealso{
Other exporting: \code{\link{get_edge_data}},
  \code{\link{get_network_as_tidygraph}}
}
\concept{exporting}
